/* tslint:disable */
/* eslint-disable */
/**
 * Starter HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { COSEAlgorithmIdentifier } from './COSEAlgorithmIdentifier';
import {
    COSEAlgorithmIdentifierFromJSON,
    COSEAlgorithmIdentifierFromJSONTyped,
    COSEAlgorithmIdentifierToJSON,
} from './COSEAlgorithmIdentifier';

/**
 * 
 * @export
 * @interface PublicKeyCredentialParameters
 */
export interface PublicKeyCredentialParameters {
    /**
     * 
     * @type {any}
     * @memberof PublicKeyCredentialParameters
     */
    type: any | null;
    /**
     * 
     * @type {COSEAlgorithmIdentifier}
     * @memberof PublicKeyCredentialParameters
     */
    alg: COSEAlgorithmIdentifier;
}

/**
 * Check if a given object implements the PublicKeyCredentialParameters interface.
 */
export function instanceOfPublicKeyCredentialParameters(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "alg" in value;

    return isInstance;
}

export function PublicKeyCredentialParametersFromJSON(json: any): PublicKeyCredentialParameters {
    return PublicKeyCredentialParametersFromJSONTyped(json, false);
}

export function PublicKeyCredentialParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicKeyCredentialParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'alg': COSEAlgorithmIdentifierFromJSON(json['alg']),
    };
}

export function PublicKeyCredentialParametersToJSON(value?: PublicKeyCredentialParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': value.type,
        'alg': COSEAlgorithmIdentifierToJSON(value.alg),
    };
}

