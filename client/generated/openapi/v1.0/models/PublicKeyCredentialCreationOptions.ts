/* tslint:disable */
/* eslint-disable */
/**
 * Starter HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AttestationConveyancePreference } from './AttestationConveyancePreference';
import {
    AttestationConveyancePreferenceFromJSON,
    AttestationConveyancePreferenceFromJSONTyped,
    AttestationConveyancePreferenceToJSON,
} from './AttestationConveyancePreference';
import type { Excludecredentials } from './Excludecredentials';
import {
    ExcludecredentialsFromJSON,
    ExcludecredentialsFromJSONTyped,
    ExcludecredentialsToJSON,
} from './Excludecredentials';
import type { PublicKeyCredentialCreationOptionsAuthenticatorSelection } from './PublicKeyCredentialCreationOptionsAuthenticatorSelection';
import {
    PublicKeyCredentialCreationOptionsAuthenticatorSelectionFromJSON,
    PublicKeyCredentialCreationOptionsAuthenticatorSelectionFromJSONTyped,
    PublicKeyCredentialCreationOptionsAuthenticatorSelectionToJSON,
} from './PublicKeyCredentialCreationOptionsAuthenticatorSelection';
import type { PublicKeyCredentialParameters } from './PublicKeyCredentialParameters';
import {
    PublicKeyCredentialParametersFromJSON,
    PublicKeyCredentialParametersFromJSONTyped,
    PublicKeyCredentialParametersToJSON,
} from './PublicKeyCredentialParameters';
import type { PublicKeyCredentialRpEntity } from './PublicKeyCredentialRpEntity';
import {
    PublicKeyCredentialRpEntityFromJSON,
    PublicKeyCredentialRpEntityFromJSONTyped,
    PublicKeyCredentialRpEntityToJSON,
} from './PublicKeyCredentialRpEntity';
import type { PublicKeyCredentialUserEntity } from './PublicKeyCredentialUserEntity';
import {
    PublicKeyCredentialUserEntityFromJSON,
    PublicKeyCredentialUserEntityFromJSONTyped,
    PublicKeyCredentialUserEntityToJSON,
} from './PublicKeyCredentialUserEntity';
import type { Timeout } from './Timeout';
import {
    TimeoutFromJSON,
    TimeoutFromJSONTyped,
    TimeoutToJSON,
} from './Timeout';

/**
 * 
 * @export
 * @interface PublicKeyCredentialCreationOptions
 */
export interface PublicKeyCredentialCreationOptions {
    /**
     * 
     * @type {PublicKeyCredentialRpEntity}
     * @memberof PublicKeyCredentialCreationOptions
     */
    rp: PublicKeyCredentialRpEntity;
    /**
     * 
     * @type {PublicKeyCredentialUserEntity}
     * @memberof PublicKeyCredentialCreationOptions
     */
    user: PublicKeyCredentialUserEntity;
    /**
     * 
     * @type {Blob}
     * @memberof PublicKeyCredentialCreationOptions
     */
    challenge: Blob;
    /**
     * 
     * @type {Array<PublicKeyCredentialParameters>}
     * @memberof PublicKeyCredentialCreationOptions
     */
    pubKeyCredParams: Array<PublicKeyCredentialParameters>;
    /**
     * 
     * @type {Timeout}
     * @memberof PublicKeyCredentialCreationOptions
     */
    timeout?: Timeout;
    /**
     * 
     * @type {Excludecredentials}
     * @memberof PublicKeyCredentialCreationOptions
     */
    excludeCredentials?: Excludecredentials;
    /**
     * 
     * @type {PublicKeyCredentialCreationOptionsAuthenticatorSelection}
     * @memberof PublicKeyCredentialCreationOptions
     */
    authenticatorSelection?: PublicKeyCredentialCreationOptionsAuthenticatorSelection;
    /**
     * 
     * @type {AttestationConveyancePreference}
     * @memberof PublicKeyCredentialCreationOptions
     */
    attestation?: AttestationConveyancePreference;
}

/**
 * Check if a given object implements the PublicKeyCredentialCreationOptions interface.
 */
export function instanceOfPublicKeyCredentialCreationOptions(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "rp" in value;
    isInstance = isInstance && "user" in value;
    isInstance = isInstance && "challenge" in value;
    isInstance = isInstance && "pubKeyCredParams" in value;

    return isInstance;
}

export function PublicKeyCredentialCreationOptionsFromJSON(json: any): PublicKeyCredentialCreationOptions {
    return PublicKeyCredentialCreationOptionsFromJSONTyped(json, false);
}

export function PublicKeyCredentialCreationOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicKeyCredentialCreationOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rp': PublicKeyCredentialRpEntityFromJSON(json['rp']),
        'user': PublicKeyCredentialUserEntityFromJSON(json['user']),
        'challenge': json['challenge'],
        'pubKeyCredParams': ((json['pubKeyCredParams'] as Array<any>).map(PublicKeyCredentialParametersFromJSON)),
        'timeout': !exists(json, 'timeout') ? undefined : TimeoutFromJSON(json['timeout']),
        'excludeCredentials': !exists(json, 'excludeCredentials') ? undefined : ExcludecredentialsFromJSON(json['excludeCredentials']),
        'authenticatorSelection': !exists(json, 'authenticatorSelection') ? undefined : PublicKeyCredentialCreationOptionsAuthenticatorSelectionFromJSON(json['authenticatorSelection']),
        'attestation': !exists(json, 'attestation') ? undefined : AttestationConveyancePreferenceFromJSON(json['attestation']),
    };
}

export function PublicKeyCredentialCreationOptionsToJSON(value?: PublicKeyCredentialCreationOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rp': PublicKeyCredentialRpEntityToJSON(value.rp),
        'user': PublicKeyCredentialUserEntityToJSON(value.user),
        'challenge': value.challenge,
        'pubKeyCredParams': ((value.pubKeyCredParams as Array<any>).map(PublicKeyCredentialParametersToJSON)),
        'timeout': TimeoutToJSON(value.timeout),
        'excludeCredentials': ExcludecredentialsToJSON(value.excludeCredentials),
        'authenticatorSelection': PublicKeyCredentialCreationOptionsAuthenticatorSelectionToJSON(value.authenticatorSelection),
        'attestation': AttestationConveyancePreferenceToJSON(value.attestation),
    };
}

