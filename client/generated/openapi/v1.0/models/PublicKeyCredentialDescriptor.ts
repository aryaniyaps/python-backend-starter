/* tslint:disable */
/* eslint-disable */
/**
 * Starter HTTP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Transports } from './Transports';
import {
    TransportsFromJSON,
    TransportsFromJSONTyped,
    TransportsToJSON,
} from './Transports';

/**
 * 
 * @export
 * @interface PublicKeyCredentialDescriptor
 */
export interface PublicKeyCredentialDescriptor {
    /**
     * 
     * @type {Blob}
     * @memberof PublicKeyCredentialDescriptor
     */
    id: Blob;
    /**
     * 
     * @type {any}
     * @memberof PublicKeyCredentialDescriptor
     */
    type?: any | null;
    /**
     * 
     * @type {Transports}
     * @memberof PublicKeyCredentialDescriptor
     */
    transports?: Transports;
}

/**
 * Check if a given object implements the PublicKeyCredentialDescriptor interface.
 */
export function instanceOfPublicKeyCredentialDescriptor(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function PublicKeyCredentialDescriptorFromJSON(json: any): PublicKeyCredentialDescriptor {
    return PublicKeyCredentialDescriptorFromJSONTyped(json, false);
}

export function PublicKeyCredentialDescriptorFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublicKeyCredentialDescriptor {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'transports': !exists(json, 'transports') ? undefined : TransportsFromJSON(json['transports']),
    };
}

export function PublicKeyCredentialDescriptorToJSON(value?: PublicKeyCredentialDescriptor | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'transports': TransportsToJSON(value.transports),
    };
}

