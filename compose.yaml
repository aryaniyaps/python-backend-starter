services:
  traefik:
    image: traefik:v2.11
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --api.insecure=true
      - --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  server:
    build:
      context: ./server
      target: development
    working_dir: /app
    ports:
      - "8000:8000"
    environment:
      SERVER_DEBUG: "true"
      SERVER_ENVIRONMENT: "development"
      SERVER_HOST: "127.0.0.1"
      SERVER_PORT: "8000"
      SERVER_LOG_LEVEL: "INFO"
      SERVER_CORS_ALLOW_ORIGINS: '["*"]'
      SERVER_SERVER_URL: "http://localhost:8000"
      SERVER_OPENAPI_URL: "/openapi.json"
      SERVER_RP_ID: "localhost"
      SERVER_RP_NAME: "Starter"
      SERVER_RP_EXPECTED_ORIGIN: "http://localhost:8000"
      SERVER_DATABASE_URL: "postgresql+asyncpg://user:pass@localhost:5432/starter"
      SERVER_DATABASE_POOL_SIZE: "20"
      SERVER_REDIS_URL: "redis://:pass@localhost:6379/1"
      SERVER_SAQ_BROKER_URL: "redis://:pass@localhost:6379/2"
      SERVER_SAQ_CONCURRENCY: "100"
      SERVER_EMAIL_HOST: "localhost"
      SERVER_EMAIL_PORT: "1025"
      SERVER_EMAIL_USERNAME: ""
      SERVER_EMAIL_PASSWORD: ""
      SERVER_EMAIL_FROM: "noreply@example.com"
      SERVER_GEOLITE2_DATABASE_PATH: "./data/geoipupdate/GeoLite2-City.mmdb"

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postgres
      - redis
      - geoipupdate

  postgres:
    image: "bitnami/postgresql:16"
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_USERNAME=user
      - POSTGRESQL_PASSWORD=pass
      - POSTGRESQL_DATABASE=starter
    volumes:
      - "postgres_data:/bitnami/postgresql"

  redis:
    image: "bitnami/redis:6.2"
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=pass
    volumes:
      - "redis_data:/bitnami"

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025"
      - "8025:8025"

  geoipupdate:
    image: ghcr.io/maxmind/geoipupdate
    restart: on-failure
    environment:
      - GEOIPUPDATE_ACCOUNT_ID_FILE=/run/secrets/GEOIPUPDATE_ACCOUNT_ID
      - GEOIPUPDATE_LICENSE_KEY_FILE=/run/secrets/GEOIPUPDATE_LICENSE_KEY
      - GEOIPUPDATE_EDITION_IDS=GeoLite2-City
      - GEOIPUPDATE_FREQUENCY=168
    volumes:
      - "./data/geoipupdate:/usr/share/GeoIP"
    secrets:
      - GEOIPUPDATE_ACCOUNT_ID
      - GEOIPUPDATE_LICENSE_KEY

secrets:
  GEOIPUPDATE_ACCOUNT_ID:
    file: ./secrets/GEOIPUPDATE_ACCOUNT_ID.txt
  GEOIPUPDATE_LICENSE_KEY:
    file: ./secrets/GEOIPUPDATE_LICENSE_KEY.txt

volumes:
  postgres_data:
  redis_data:

networks:
  apisix:
    driver: bridge
